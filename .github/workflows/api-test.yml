name: api-test-and-deploy
on:
  push:
    branches:
      - main
  #   paths:
  #     - 'packages/api/**'
  # pull_request:
  #   paths:
  #     - 'packages/api/**'
concurrency:
  # cancel any old in progress tests for the PR if there are newer tests running
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout code
      #   uses: actions/checkout@v3
      # - name: Dump GitHub context
      #   id: github_context_step
      #   run: |
      #     echo '${{ toJSON(github) }}'
      - name: show some vars
        run: |
          echo github workflow ${{ github.workflow }}
          echo github ref ${{ github.ref }}
      - name: Install dependencies
        run: |
          echo yarn install
      - name: test
        run: |
          echo yarn test
          echo sleeping for 60s
          sleep 60

  deploy-staging:
    runs-on: ubuntu-latest
    needs: test
    environment: staging
    name: Deploy to staging
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: deploy staging
        run: |
          echo yarn deploy staging

  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment: production
    name: Deploy to production
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to production
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo yarn deploy production
      - name: send deployment metric
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo sending deployment metric
          echo workflow                    : $GITHUB_WORKFLOW
          echo run_number                  : ${{ github.run_number }}
          echo run_attempt                 : ${{ github.run_attempt }}
          echo start_timestamp             : $(date -d ${{ github.event.head_commit.timestamp }} +%s)
          echo end_timestamp               : $(date +%s)
          # define a bash function to generate json data for curl
          generate_post_json_data()
          {
            cat <<EOF
          {
            "workflow": "$GITHUB_WORKFLOW",
            "run_number": ${{ github.run_number }},
            "run_attempt": ${{ github.run_attempt }},
            "start_timestamp": $(date -d ${{ github.event.head_commit.timestamp }} +%s),
            "end_timestamp": "$(date +%s)"
          }
          EOF
          }

          # send prod deployment complete metric to rc main api public endpoint
          # curl https://api.referralcandy.com/v1/analytics/deployments \
          curl pie.dev/post \
          --header "Content-Type: application/json" \
          --data "$(generate_post_json_data)"

          # curl https://api.dev.anafore.com/staging/analytics/deployments \
          # --header "Content-Type: application/json" \
          # --data "$(generate_post_json_data)"
